# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python



executors:
  python_executor:
    docker:
      - image: cimg/python:3.10.2


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # lint:
    # executor: python_executor
    # steps:
      # - install_lint_dependecies
      # - run_eslint

  test:
    docker:
      - image: python:slim
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      # all docker commands can be run after this is run
      - setup_remote_docker
      - run:
          name: Publish Dockerimage to Dockerhub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin



  build:
    docker:
      - image: cimg/python:3.10.2

    steps:
      - checkout
      - run:
          name: Building
          # This assumes pytest is installed via the install-package step above
          command: python index.py

  deployment:
    docker:
      - image: cimg/python:3.10.2

    steps:
      - checkout
      - run:
          name: Deploying
          # This assumes pytest is installed via the install-package step above
          command: python index.py

commands:
  # install_lint_dependecies:
  #   steps:
  #     - run:
  #         name: Installing
  #         command: pip install pycodestyle

  install_dependencies:
    steps:
        - run:
            name: Installing dependencies
            command: pip install -r requirements.txt

  start_app:
    steps:
        - run:
            name: Starting Flask app
            command: flask run

  run_eslint:
    steps:
      - checkout
      - run:
          name: Linting
          command: pycodestyle --first index.py





# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      # - lint
      - test
      # - build
      # - deployment
